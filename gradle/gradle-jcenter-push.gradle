apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'maven'
version = "1.0.1"
project.archivesBaseName = PROJ_ARTIFACTID

def siteUrl = 'https://github.com/WrBug/componentrouter'
def gitUrl = 'https://github.com/WrBug/componentrouter.git'
group = 'com.wrbug.componentrouter'
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact sourcesJar
            artifact javadocJar
        }
    }
}
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}
task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

javadoc {
    options{
        encoding "UTF-8"
        charSet 'UTF-8'
        author true
        failOnError false
        version true
        title "componentrouter $version"
        String packageListRef = ""
        linksOffline 'http://d.android.com/reference/', packageListRef
    }
}

install {
    repositories.mavenInstaller {
        pom {
            project {
                packaging 'jar'
                name 'componentrouter'
                url siteUrl
                licenses {
                    license {
                        name 'The MIT License (MIT)'
                    }
                }
                developers {
                    developer {
                        id 'wrbug'
                        name 'wrbug'
                        email 'iwrbug@gmail.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
artifacts {
    archives javadocJar
    archives sourcesJar
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            if (plugins.hasPlugin('war')) {
                from components.web
            } else {
                from components.java
            }

            artifact sourcesJar
            artifact javadocJar
        }
    }
}
bintray {
    Properties properties = new Properties()
    try {
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
    } catch (Exception e) {
    }
    user = properties.getProperty("BINTRAY_USER")
    key = properties.getProperty("BINTRAY_KEY")
    configurations = ['archives']
    pkg {
        repo = "maven"
        name = "componentrouter"
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["MIT"]
        publish = true
    }
}